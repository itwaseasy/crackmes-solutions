echo "jbgkfmgkknbiblpmibgkcneiedgokibmekffokamknbkhgnlhnajeefpekiefmjgeogjbflijnekebeokpgngjnfbimlkdjdjhan" | grep -o . | sort | uniq | tr -d '\n'


length: 100
valid chars: 0-9 a-f, i.e. bigint in hex

jumble:
	- if a..f, add 9 => j..o
	- 2 * (0..9|j..o % 16) => 2* (48..57|106..111 % 16) => 2 * [0..15]
	- if result > 15, add 1

	'0': 2 * (48%16) = 0 % 16 = 0  						=> 'a'
	'1': 2 * (49%16) = 2 % 16 = 2						=> 'c'
	'2': 2 * (50%16) = 4 % 16 = 4						=> 'e'
	'3': 2 * (51%16) = 6 % 16 = 6						=> 'g'
	'4': 2 * (52%16) = 8 % 16 = 8						=> 'i'
	'5': 2 * (53%16) = 10 % 16 = 10						=> 'k'
	'6': 2 * (54%16) = 12 % 16 = 12						=> 'm'
	'7': 2 * (55%16) = 14 % 16 = 14						=> 'o'
	'8': 2 * (56%16) = 16 + 1 = 17 % 16 = 1				=> 'b'
	'9': 2 * (57%16) = 18 + 1 = 19 % 16 = 3				=> 'd'
	'a': 2 * ((97+9)%16) = 20 + 1 = 21 % 16 = 5			=> 'f'
	'b': 2 * ((98+9)%16) = 22 + 1 = 23 % 16 = 7			=> 'h'
	'c': 2 * ((99+9)%16) = 24 + 1 = 25 % 16 = 9			=> 'j'
	'd': 2 * ((100+9)%16) = 26 + 1 = 27 % 16 = 11		=> 'l'
	'e': 2 * ((101+9)%16) = 28 + 1 = 29 % 16 = 13		=> 'n'
	'f': 2 * ((102+9)%16) = 30 + 1 = 31 % 16 = 15		=> 'p'
